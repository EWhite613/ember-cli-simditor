<div class="desc">
    <h1>ember-cli-simditor
        <a href="https://travis-ci.org/wecatch/ember-cli-simditor">
            <img src="https://travis-ci.org/wecatch/ember-cli-simditor.svg?branch=master" alt="">
        </a>
    </h1>
    <p>
        Ember component wrapper for simditor editor.
    </p>
    <a href="https://github.com/wecatch/ember-cli-simditor">Github</a>
    <a href="http://wecatch.me">Wecatch</a>
</div>
<div class="code">
    <h1>How to use</h1>
    <code>
        <pre>\{{simditor-editor value=model update=(action (mut model.content)) editor=(mut editor) onValuechanged=(action "valuechanged")}}</pre>
    </code>
    <p>
        <strong>Model object must have one property called content for component to render.</strong>
    </p>
</div>
<div>
    <h1>Editor methods</h1>
    <button {{action "setValue"}} >setValue</button>
    <button {{action "getValue"}} >getValue</button>
    <button {{action "sync"}}>sync</button>
    <button {{action "focus"}} >focus</button>
    <button {{action "blur"}}>blur</button>
    <button {{action "hidePopover"}} >hidePopover</button>
</div>
<br>
<h1>Editor</h1>
{{simditor-editor value=(get model 'one') update=(action (mut model.one.content)) editor=(mut editor) onValuechanged=(action "valuechanged")}}
<div>
    <h1>Html content</h1>
    {{model.one.content}}
</div>

<h1>
    Locale
</h1>
<div class="code">
    <p>locale only support <em>en-US</em>(English) and <em>zh-CN</em>(Chinese)</p>
    <code>
        <pre>\{{simditor-editor value=model locale='zh-CN' update=(action (mut model.content)) editor=(mut editor)}}</pre>
    </code>
</div>
{{simditor-editor value=(get model 'two') locale='zh-CN' update=(action (mut model.two.content)) editor=(mut editor_two)}}

<h1>
    Custome content property name
</h1>
<div class="code">
    <p>You can change model content propery name by passing name argument</p>
    <code>
        <pre>\{{simditor-editor value=model name='html'  update=(action (mut model.html)) editor=(mut editor)}}</pre>
    </code>
</div>
{{simditor-editor value=(get model 'three') name='html' update=(action (mut model.three.html)) editor=(mut editor_three)}}
